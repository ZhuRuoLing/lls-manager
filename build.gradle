buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath 'gradle.plugin.com.github.jengelman.gradle.plugins:shadow:7.0.0'
    }
}

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
//    id 'com.google.protobuf' version '0.8.17'
}

group = 'com.plusls'
version = project.plugin_version

sourceCompatibility = '16'
targetCompatibility = '16'

repositories {
    mavenCentral()
    maven {
        name = 'velocitypowered-repo'
        url = 'https://repo.velocitypowered.com/releases/'
    }
    maven {
        name = 'minecraft-libraries'
        url = 'https://libraries.minecraft.net/'
    }
    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/maven'
    }
    maven {
        name = 'opencollab-snapshot'
        url = 'https://repo.opencollab.dev/maven-snapshots/'
    }
}

dependencies {
    compileOnly "com.velocitypowered:velocity-api:${project.velocity_version}"
    annotationProcessor "com.velocitypowered:velocity-api:${project.velocity_version}"
    compileOnly "org.geysermc.floodgate:api:${project.floodgate_version}"
    compileOnly "io.netty:netty-all:4.1.86.Final"
    compileOnly fileTree(dir: 'lib', include: ['*.jar'])
//    // bcrypt
    implementation "org.mindrot:jbcrypt:${project.jbcrypt_version}"
//    // grpc
//    implementation "io.grpc:grpc-protobuf:${project.grpc_version}"
//    implementation "io.grpc:grpc-stub:${project.grpc_version}"
////    implementation "io.grpc:grpc-netty-shaded:${project.grpc_version}"
//    compileOnly 'org.apache.tomcat:annotations-api:6.0.53' // necessary for Java 9+

}

//protobuf {
//    protoc { artifact = "com.google.protobuf:protoc:${project.protobuf_version}" }
//    plugins {
//        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${project.grpc_version}" }
//    }
//    generateProtoTasks {
//        all()*.plugins { grpc {} }
//    }
//}

//sourceSets {
//    main {
//        java {
//            srcDirs 'build/generated/source/proto/main/grpc'
//            srcDirs 'build/generated/source/proto/main/java'
//        }
//    }
//}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// import org.apache.tools.ant.filters.ReplaceTokens

//task processSources(type: Sync) {
//    from sourceSets.main.java.srcDirs
//    inputs.property 'version', version
//    filter ReplaceTokens, tokens: [version: version]
//    into "$buildDir/src"
//}

//compileJava.source = processSources.outputs

build.dependsOn(shadowJar)